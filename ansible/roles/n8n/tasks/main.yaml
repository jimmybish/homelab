---
- name: Ensure docker-compose is installed
  ansible.builtin.package:
    name: docker-compose
    state: present

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Setup n8n directory
  ansible.builtin.file:
    path: "{{ n8n_folder }}"
    state: directory
    mode: '0755'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"

- name: Setup n8n local-files directory
  ansible.builtin.file:
    path: "{{ n8n_folder }}/local-files"
    state: directory
    mode: '0755'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"

- name: Allow n8n port through UFW
  community.general.ufw:
    rule: allow
    port: "{{ n8n_port }}"
    proto: tcp
  when: ansible_os_family == "Debian"

- name: Deploy n8n using Docker Compose
  ansible.builtin.template:
    src: "templates/docker_compose.yaml.j2"
    dest: "{{ n8n_folder }}/docker-compose.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  notify:
    - Start n8n

- name: Run n8n docker-compose up
  community.docker.docker_compose_v2:
    project_src: "{{ n8n_folder }}"
    state: present
    remove_orphans: true

# Check if n8n port is open and listening
- name: Check if n8n port is open and listening
  community.general.listen_ports_facts:

- name: Assert n8n port is listening
  ansible.builtin.assert:
    that:
      - n8n_port | int in (ansible_facts.tcp_listen | map(attribute='port') | list)
    fail_msg: "n8n port {{ n8n_port }} is not open and listening!"
    success_msg: "n8n port {{ n8n_port }} is open and listening."

# Proxy Configuration (Optional)
- name: Configure nginx proxy for n8n
  when: n8n_configure_proxy | default(true)
  block:
    - name: Get n8n host IP for proxy
      ansible.builtin.set_fact:
        n8n_proxy_ip: "{{ ansible_default_ipv4.address }}"

    - name: Deploy n8n nginx proxy config
      ansible.builtin.template:
        src: "templates/n8n.subdomain.conf.j2"
        dest: "{{ proxy_folder }}/internal/nginx/proxy-confs/n8n.subdomain.conf"
        mode: '0644'
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
      delegate_to: "{{ groups['proxy_host'][0] }}"
      notify: Restart Swag

    - name: Debug proxy configuration
      ansible.builtin.debug:
        msg: "n8n proxy config deployed to {{ groups['proxy_host'][0] }} routing {{ n8n_proxy_ip }}:{{ n8n_port }} -> https://n8n.{{ internal_domain }}"

# DNS Alias Configuration (Required for web interface)
- name: Get DNS resolver host overrides from pfSense
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/host_overrides"
    method: GET
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
    validate_certs: false
    return_content: true
  register: pfsense_dns_overrides
  delegate_to: localhost
  when: n8n_configure_dns | default(true)

- name: Find proxy host override entry in pfSense
  ansible.builtin.set_fact:
    proxy_host_override: >-
      {{ pfsense_dns_overrides.json.data
         | selectattr('host', 'equalto', 'proxy')
         | selectattr('domain', 'equalto', internal_domain)
         | list
         | first
         | default({}) }}
  when:
    - n8n_configure_dns | default(true)
    - pfsense_dns_overrides.json.data is defined

- name: Check if n8n alias exists under proxy host override
  ansible.builtin.set_fact:
    n8n_alias_exists: >-
      {{ proxy_host_override.aliases | default([])
         | selectattr('host', 'equalto', 'n8n')
         | selectattr('domain', 'equalto', internal_domain)
         | list
         | length > 0 }}
  when:
    - n8n_configure_dns | default(true)
    - proxy_host_override is defined
    - proxy_host_override | length > 0

- name: Display n8n DNS alias status
  ansible.builtin.debug:
    msg: >-
      {% if proxy_host_override | length == 0 %}
      Warning: Proxy host override not found in pfSense DNS
      {% elif n8n_alias_exists %}
      n8n DNS alias exists under proxy.{{ internal_domain }}
      {% else %}
      n8n DNS alias missing - will be created
      {% endif %}
  when: n8n_configure_dns | default(true)

- name: Create n8n DNS alias under proxy host override
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/host_override/alias"
    method: POST
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      parent_id: "{{ proxy_host_override.id }}"
      host: "n8n"
      domain: "{{ internal_domain }}"
      descr: "n8n Workflow Automation"
    validate_certs: false
    status_code: [200, 201]
  delegate_to: localhost
  register: alias_creation_result
  when:
    - n8n_configure_dns | default(true)
    - proxy_host_override | length > 0
    - not n8n_alias_exists

- name: Apply DNS resolver changes in pfSense
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/apply"
    method: POST
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
    validate_certs: false
    status_code: [200, 201]
  delegate_to: localhost
  when:
    - n8n_configure_dns | default(true)
    - alias_creation_result is succeeded

# Homepage Configuration (Optional)
- name: Configure homepage service for n8n
  when: n8n_configure_homepage | default(true)
  block:
    - name: Check if n8n service already exists in services.yaml
      ansible.builtin.slurp:
        src: "{{ homepage_folder }}/config/services.yaml"
      delegate_to: "{{ groups['homepage_host'][0] }}"
      register: homepage_services_content

    - name: Add n8n service to Homepage Smart Home section
      ansible.builtin.blockinfile:
        path: "{{ homepage_folder }}/config/services.yaml"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - n8n service"
        block: "{{ lookup('template', 'homepage_service.yaml.j2') }}"
        insertafter: "^- Smart Home:"
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: '0644'
      delegate_to: "{{ groups['homepage_host'][0] }}"
      when: "'ANSIBLE MANAGED BLOCK - n8n service' not in (homepage_services_content['content'] | b64decode)"
      notify: Restart Homepage

    - name: Debug homepage configuration
      ansible.builtin.debug:
        msg: "n8n service configured on {{ groups['homepage_host'][0] }} in Smart Home section"
