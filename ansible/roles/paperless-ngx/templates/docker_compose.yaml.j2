# Docker Compose file for running paperless from the docker container registry.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

services:
  broker:
    image: docker.io/library/redis:{{ redis_version }}
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - paperless_net

  db:
    image: docker.io/library/postgres:{{ postgres_version }}
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    networks:
      - paperless_net

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:{{ paperless_version }}
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    ports:
      - "{{ paperless_port }}:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_TIME_ZONE: {{ timezone }}
      PAPERLESS_OCR_LANGUAGE: eng
      PAPERLESS_URL: {{ internal_paperless_url }}
      PAPERLESS_CSRF_TRUSTED_ORIGINS: {{ internal_paperless_url }}
      PAPERLESS_TRUSTED_PROXIES: {{ paperless_trusted_proxies }}
      USERMAP_UID: "{{ docker_user_puid }}"
      USERMAP_GID: "{{ docker_user_pgid }}"
      PAPERLESS_SECRET_KEY: "{{ paperless_secret_key }}"
      PAPERLESS_ADMIN_USER: "{{ paperless_admin_user }}"
      PAPERLESS_ADMIN_PASSWORD: "{{ paperless_admin_password }}"
    networks:
      - paperless_net

  gotenberg:
    image: docker.io/gotenberg/gotenberg:{{ gotenberg_version }}
    restart: unless-stopped
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      - paperless_net

  tika:
    image: docker.io/apache/tika:{{ tika_version }}
    restart: unless-stopped
    networks:
      - paperless_net

volumes:
  data:
  media:
    driver: local
    driver_opts:
      type: nfs
      o: "addr={{ paperless_fileserver_ip }},nolock,soft,rw"
      device: ":{{ fs_scans }}"
  pgdata:
  redisdata:

networks:
  paperless_net:
    driver: bridge