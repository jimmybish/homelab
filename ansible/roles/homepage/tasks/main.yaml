---
- name: Ensure docker-compose is installed
  ansible.builtin.package:
    name: docker-compose
    state: present
  tags:
    - homepage

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  tags:
    - homepage

- name: Setup Homepage directory
  ansible.builtin.file:
    path: "{{ homepage_folder }}"
    state: directory
    mode: '0755'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
  tags:
    - homepage

- name: Setup Homepage config directory
  ansible.builtin.file:
    path: "{{ homepage_folder }}/config"
    state: directory
    mode: '0755'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
  tags:
    - homepage

- name: Allow Homepage port through UFW
  community.general.ufw:
    rule: allow
    port: "{{ homepage_port }}"
    proto: tcp
  when: ansible_os_family == "Debian"
  tags:
    - homepage

- name: Deploy Bookmarks config
  ansible.builtin.template:
    src: "templates/bookmarks.yaml.j2"
    dest: "{{ homepage_folder }}/config/bookmarks.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  tags:
    - homepage
    - homepage_config

- name: Deploy Docker config
  ansible.builtin.template:
    src: "templates/docker.yaml.j2"
    dest: "{{ homepage_folder }}/config/docker.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  tags:
    - homepage
    - homepage_config

- name: Deploy Kubernetes config
  ansible.builtin.template:
    src: "templates/kubernetes.yaml.j2"
    dest: "{{ homepage_folder }}/config/kubernetes.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  tags:
    - homepage
    - homepage_config

- name: Deploy Services config
  ansible.builtin.template:
    src: "templates/services.yaml.j2"
    dest: "{{ homepage_folder }}/config/services.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  tags:
    - homepage
    - homepage_config

- name: Deploy Settings config
  ansible.builtin.template:
    src: "templates/settings.yaml.j2"
    dest: "{{ homepage_folder }}/config/settings.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  tags:
    - homepage
    - homepage_config

- name: Deploy Widgets config
  ansible.builtin.template:
    src: "templates/widgets.yaml.j2"
    dest: "{{ homepage_folder }}/config/widgets.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  tags:
    - homepage
    - homepage_config


- name: Deploy Homepage using Docker Compose
  ansible.builtin.template:
    src: "templates/docker_compose.yaml.j2"
    dest: "{{ homepage_folder }}/docker-compose.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
  tags:
    - homepage

- name: Run Homepage docker-compose up
  community.docker.docker_compose_v2:
    project_src: "{{ homepage_folder }}"
    state: present
    remove_orphans: false
  tags:
    - homepage

- name: Check if Homepage port is open and listening
  community.general.listen_ports_facts:
  tags:
    - homepage

- name: Assert Homepage port is listening
  ansible.builtin.assert:
    that:
      - homepage_port | int in (ansible_facts.tcp_listen | map(attribute='port') | list)
    fail_msg: "Homepage port {{ homepage_port }} is not open and listening!"
    success_msg: "Homepage port {{ homepage_port }} is open and listening."
  tags:
    - homepage

# Proxy Configuration
- name: Configure nginx proxy for homepage
  when: homepage_configure_proxy | default(true)
  tags:
    - homepage
  block:
    - name: Get homepage host IP for proxy
      ansible.builtin.set_fact:
        homepage_proxy_ip: "{{ ansible_default_ipv4.address }}"

    - name: Deploy homepage nginx proxy config
      ansible.builtin.template:
        src: "templates/homepage.subdomain.conf.j2"
        dest: "{{ proxy_folder }}/internal/nginx/proxy-confs/homepage.subdomain.conf"
        mode: '0644'
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
      delegate_to: "{{ groups['proxy_host'][0] }}"
      notify: Restart Swag

    - name: Debug proxy configuration
      ansible.builtin.debug:
        msg: >-
          Homepage proxy config deployed to {{ groups['proxy_host'][0] }}
          routing {{ homepage_proxy_ip }}:{{ homepage_port }} -> https://homepage.{{ internal_domain }}

# DNS Alias Configuration
- name: Get DNS resolver host overrides from pfSense
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/host_overrides"
    method: GET
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
    validate_certs: false
    return_content: true
  register: pfsense_dns_overrides
  delegate_to: localhost
  when: homepage_configure_dns | default(true)
  tags:
    - homepage

- name: Find proxy host override entry in pfSense
  ansible.builtin.set_fact:
    proxy_host_override: >-
      {{ pfsense_dns_overrides.json.data
         | selectattr('host', 'equalto', 'proxy')
         | selectattr('domain', 'equalto', internal_domain)
         | list
         | first
         | default({}) }}
  when:
    - homepage_configure_dns | default(true)
    - pfsense_dns_overrides.json.data is defined
  tags:
    - homepage

- name: Check if homepage alias exists under proxy host override
  ansible.builtin.set_fact:
    homepage_alias_exists: >-
      {{ proxy_host_override.aliases | default([])
         | selectattr('host', 'equalto', 'homepage')
         | selectattr('domain', 'equalto', internal_domain)
         | list
         | length > 0 }}
  when:
    - homepage_configure_dns | default(true)
    - proxy_host_override is defined
    - proxy_host_override | length > 0
  tags:
    - homepage

- name: Display homepage DNS alias status
  ansible.builtin.debug:
    msg: >-
      {% if proxy_host_override | length == 0 %}
      Warning: Proxy host override not found in pfSense DNS
      {% elif homepage_alias_exists %}
      Homepage DNS alias exists under proxy.{{ internal_domain }}
      {% else %}
      Homepage DNS alias missing - will be created
      {% endif %}
  when: homepage_configure_dns | default(true)
  tags:
    - homepage

- name: Create homepage DNS alias under proxy host override
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/host_override/alias"
    method: POST
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      parent_id: "{{ proxy_host_override.id }}"
      host: "homepage"
      domain: "{{ internal_domain }}"
      descr: "Homepage Dashboard"
    validate_certs: false
    status_code: [200, 201]
  delegate_to: localhost
  register: alias_creation_result
  when:
    - homepage_configure_dns | default(true)
    - proxy_host_override | length > 0
    - not homepage_alias_exists
  tags:
    - homepage

- name: Apply DNS resolver changes in pfSense
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/apply"
    method: POST
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
    validate_certs: false
    status_code: [200, 201]
  delegate_to: localhost
  when:
    - homepage_configure_dns | default(true)
    - alias_creation_result is succeeded
  tags:
    - homepage

- name: Restart Homepage to apply all configurations
  community.docker.docker_compose_v2:
    project_src: "{{ homepage_folder }}"
    state: restarted
  tags:
    - homepage
    - homepage_config

- name: Display next steps for populating Homepage with services
  ansible.builtin.debug:
    msg:
      - "=========================================="
      - "Homepage deployment complete!"
      - "=========================================="
      - ""
      - "To populate Homepage with all deployed services, run:"
      - "  ansible-playbook master_playbook.yaml --tags homepage_config --vault-password-file ~/ansible_key"
      - ""
      - "Or to update a specific service's Homepage entry:"
      - "  ansible-playbook deploy_<service>.yaml --tags homepage --vault-password-file ~/ansible_key"
      - ""
      - "Homepage is accessible at: https://homepage.{{ internal_domain }}"
      - "=========================================="
  run_once: true
  tags:
    - homepage
