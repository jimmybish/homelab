## Version 2024/07/16
# make sure that your qbittorrent container is named qbittorrent
# make sure that your dns has a cname set for qbittorrent
# if qbittorrent is running in docker, you may need to set the WebUI URL setting
# to the subfolder used below (Settings/Web UI)

# redirect to FQDN
server {
    listen 443;
    server_name qbittorrent;

    include /config/nginx/ssl.conf;

    return 301 https://qbittorrent.{{ internal_domain }}$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name qbittorrent.{{ internal_domain }};

    include /config/nginx/ssl.conf;

    client_max_body_size 0;

    # enable for ldap auth (requires ldap-location.conf in the location block)
    #include /config/nginx/ldap-server.conf;

    # enable for Authelia (requires authelia-location.conf in the location block)
    #include /config/nginx/authelia-server.conf;

    # enable for Authentik (requires authentik-location.conf in the location block)
    #include /config/nginx/authentik-server.conf;

    location / {
        # enable the next two lines for http auth
        #auth_basic "Restricted";
        #auth_basic_user_file /config/nginx/.htpasswd;

        # enable for ldap auth (requires ldap-server.conf in the server block)
        #include /config/nginx/ldap-location.conf;

        # enable for Authelia (requires authelia-server.conf in the server block)
        #include /config/nginx/authelia-location.conf;

        # enable for Authentik (requires authentik-server.conf in the server block)
        #include /config/nginx/authentik-location.conf;

        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app {{ arr_suite_proxy_ip }};
        set $upstream_port {{ arr_suite_qbittorrent_webui_port }};
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;

        # qbittorrent has some issues with csrf, uncomment if you run into issues
        proxy_hide_header "x-webkit-csp";
        proxy_hide_header "content-security-policy";
        proxy_hide_header X-Frame-Options;
        proxy_set_header X-Frame-Options "SAMEORIGIN";
    }
}
