---
- name: Ensure docker-compose is installed
  ansible.builtin.package:
    name: docker-compose
    state: present

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Create parent directory for Plex stack
  ansible.builtin.file:
    path: "{{ plex_parent_folder }}"
    state: directory
    mode: '0755'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"

- name: Setup Plex directory
  ansible.builtin.file:
    path: "{{ plex_folder }}/config"
    state: directory
    mode: '0755'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"

- name: Setup Tautulli directory
  ansible.builtin.file:
    path: "{{ plex_tautulli_folder }}"
    state: directory
    mode: '0755'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"

- name: Allow Tautulli port through UFW
  community.general.ufw:
    rule: allow
    port: "{{ plex_tautulli_port }}"
    proto: tcp
  when: ansible_os_family == "Debian"

# Plex host networking required ports
- name: Allow Plex main TCP port through UFW
  community.general.ufw:
    rule: allow
    port: 32400
    proto: tcp
  when: ansible_os_family == "Debian"

- name: Allow Plex DLNA UDP port through UFW
  community.general.ufw:
    rule: allow
    port: 1900
    proto: udp
  when: ansible_os_family == "Debian"

- name: Allow Plex Bonjour/Avahi UDP port through UFW
  community.general.ufw:
    rule: allow
    port: 5353
    proto: udp
  when: ansible_os_family == "Debian"

- name: Allow Plex discovery UDP port 32410 through UFW
  community.general.ufw:
    rule: allow
    port: 32410
    proto: udp
  when: ansible_os_family == "Debian"

- name: Allow Plex discovery UDP port 32412 through UFW
  community.general.ufw:
    rule: allow
    port: 32412
    proto: udp
  when: ansible_os_family == "Debian"

- name: Allow Plex discovery UDP port 32413 through UFW
  community.general.ufw:
    rule: allow
    port: 32413
    proto: udp
  when: ansible_os_family == "Debian"

- name: Allow Plex discovery UDP port 32414 through UFW
  community.general.ufw:
    rule: allow
    port: 32414
    proto: udp
  when: ansible_os_family == "Debian"

- name: Allow Plex remote control TCP port through UFW
  community.general.ufw:
    rule: allow
    port: 8324
    proto: tcp
  when: ansible_os_family == "Debian"

- name: Allow Plex DLNA TCP port through UFW
  community.general.ufw:
    rule: allow
    port: 32469
    proto: tcp
  when: ansible_os_family == "Debian"

- name: Get fileserver IP
  ansible.builtin.set_fact:
    plex_fileserver_ip: "{{ (lookup('ansible.builtin.inventory_hostnames', 'qnap').split(','))[0] }}"

- name: Get Plex host IP for proxy configuration
  ansible.builtin.set_fact:
    plex_host_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

- name: Deploy Plex using Docker Compose
  ansible.builtin.template:
    src: "templates/docker_compose.yaml.j2"
    dest: "{{ plex_parent_folder }}/docker-compose.yaml"
    mode: '0644'
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    force: true
  notify:
    - Start Plex

- name: Run Plex docker-compose up
  community.docker.docker_compose_v2:
    project_src: "{{ plex_parent_folder }}"
    state: present
    remove_orphans: true

# Check if required Plex ports are open and listening
- name: Check if Plex ports are open and listening
  community.general.listen_ports_facts:

- name: Warn if Plex remote control port 8324 is not listening
  ansible.builtin.debug:
    msg: "Warning: Plex remote control port 8324 is not open/listening. This is normal unless a client is connected."
  when: 8324 not in (ansible_facts.tcp_listen | map(attribute='port') | list)

- name: Warn if Plex DLNA port 32469 is not listening
  ansible.builtin.debug:
    msg: "Warning: Plex DLNA port 32469 is not open/listening. This is normal unless DLNA is enabled in Plex settings."
  when: 32469 not in (ansible_facts.tcp_listen | map(attribute='port') | list)

- name: Warn if Plex DLNA/SSDP port 1900 is not listening
  ansible.builtin.debug:
    msg: "Warning: Plex DLNA/SSDP port 1900 is not open/listening. This is normal unless DLNA is enabled in Plex settings."
  when: 1900 not in (ansible_facts.udp_listen | map(attribute='port') | list)

- name: Warn if Plex mDNS/Bonjour port 5353 is not listening
  ansible.builtin.debug:
    msg: "Warning: Plex mDNS/Bonjour port 5353 is not open/listening. This is normal unless mDNS/Bonjour is enabled in Plex or on the host."
  when: 5353 not in (ansible_facts.udp_listen | map(attribute='port') | list)

- name: Assert Plex ports are listening
  ansible.builtin.assert:
    that:
      - 32400 in (ansible_facts.tcp_listen | map(attribute='port') | list)
        # - 32410 in (ansible_facts.udp_listen | map(attribute='port') | list)
        # - 32412 in (ansible_facts.udp_listen | map(attribute='port') | list)
        # - 32413 in (ansible_facts.udp_listen | map(attribute='port') | list)
        # - 32414 in (ansible_facts.udp_listen | map(attribute='port') | list)
      - plex_tautulli_port | int in (ansible_facts.tcp_listen | map(attribute='port') | list)
    fail_msg: "One or more Plex ports are not open and listening!"
    success_msg: "All Plex ports are open and listening."

# Proxy Configuration
- name: Deploy Tautulli proxy configuration
  ansible.builtin.template:
    src: tautulli.subdomain.conf.j2
    dest: "{{ proxy_folder }}/internal/nginx/proxy-confs/tautulli.subdomain.conf"
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: '0644'
  delegate_to: "{{ groups['proxy_host'][0] }}"
  notify: Restart Swag
  when: plex_configure_proxy | bool

# DNS Configuration
- name: Get DNS resolver host overrides from pfSense
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/host_overrides"
    method: GET
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
    validate_certs: false
    return_content: true
  register: pfsense_dns_overrides
  delegate_to: localhost
  when: plex_configure_dns | default(true)

- name: Find proxy host override entry in pfSense
  ansible.builtin.set_fact:
    proxy_host_override: >-
      {{ pfsense_dns_overrides.json.data
         | selectattr('host', 'equalto', 'proxy')
         | selectattr('domain', 'equalto', internal_domain)
         | list
         | first
         | default({}) }}
  when:
    - plex_configure_dns | default(true)
    - pfsense_dns_overrides.json.data is defined

- name: Check if tautulli alias exists under proxy host override
  ansible.builtin.set_fact:
    tautulli_alias_exists: >-
      {{ proxy_host_override.aliases | default([])
         | selectattr('host', 'equalto', 'tautulli')
         | selectattr('domain', 'equalto', internal_domain)
         | list
         | length > 0 }}
  when:
    - plex_configure_dns | default(true)
    - proxy_host_override is defined
    - proxy_host_override | length > 0

- name: Display DNS alias status for tautulli
  ansible.builtin.debug:
    msg: >-
      {% if proxy_host_override | length == 0 %}
      Warning: Proxy host override not found in pfSense DNS
      {% elif tautulli_alias_exists %}
      tautulli DNS alias exists under proxy.{{ internal_domain }}
      {% else %}
      tautulli DNS alias missing - will be created
      {% endif %}
  when:
    - plex_configure_dns | default(true)
    - proxy_host_override is defined

- name: Create tautulli DNS alias under proxy host override
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/host_override/alias"
    method: POST
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      parent_id: "{{ proxy_host_override.id }}"
      host: "tautulli"
      domain: "{{ internal_domain }}"
      descr: "Tautulli (Plex monitoring)"
    validate_certs: false
    status_code: [200, 400]
  register: tautulli_dns_result
  delegate_to: localhost
  when:
    - plex_configure_dns | default(true)
    - proxy_host_override is defined
    - proxy_host_override | length > 0
    - tautulli_alias_exists is defined
    - not tautulli_alias_exists
  failed_when:
    - tautulli_dns_result.status == 400
    - "'already exists' not in (tautulli_dns_result.json.message | default(''))"

- name: Apply DNS resolver changes in pfSense
  ansible.builtin.uri:
    url: "https://{{ groups['pfsense_host'][0] }}/api/v2/services/dns_resolver/apply"
    method: POST
    headers:
      X-API-Key: "{{ pfsense_api_key }}"
    validate_certs: false
    status_code: [200, 201]
  delegate_to: localhost
  when:
    - plex_configure_dns | default(true)
    - tautulli_dns_result is changed

# Homepage Configuration
- name: Add Plex services to Homepage Media section
  ansible.builtin.blockinfile:
    path: "{{ homepage_folder }}/config/services.yaml"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - plex services"
    block: "{{ lookup('template', 'homepage_services.yaml.j2') }}"
    insertafter: "^- Media:"
    mode: '0644'
  delegate_to: "{{ groups['homepage_host'][0] }}"
  notify:
    - Restart Homepage
  when: plex_configure_homepage | default(true)
